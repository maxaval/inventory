# Generated by Django 5.1.1 on 2024-09-14 00:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('configuracion', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dui', models.CharField(blank=True, max_length=10, null=True)),
                ('nit', models.CharField(blank=True, max_length=20, null=True)),
                ('nomafp', models.CharField(blank=True, choices=[('CONFIA', 'CONFIA'), ('CRECER', 'CRECER')], max_length=20, null=True)),
                ('numafp', models.CharField(blank=True, max_length=20, null=True)),
                ('isss', models.CharField(blank=True, max_length=20, null=True)),
                ('antecedente', models.BooleanField(blank=True, default=False, null=True)),
                ('solvencia', models.BooleanField(blank=True, null=True)),
                ('vacunaCOVID', models.BooleanField(blank=True, null=True)),
                ('nombrebanco', models.CharField(blank=True, max_length=100, null=True)),
                ('cuentabanco', models.CharField(blank=True, max_length=100, null=True)),
                ('instituciondisc', models.CharField(blank=True, max_length=75, null=True)),
                ('discapacidad', models.BooleanField(blank=True, null=True)),
                ('direccion', models.CharField(blank=True, max_length=150, null=True)),
                ('telefono', models.CharField(blank=True, max_length=12, null=True)),
                ('celular', models.CharField(blank=True, max_length=12, null=True)),
                ('nomemergencia', models.CharField(blank=True, max_length=100, null=True)),
                ('parenemergencia', models.CharField(blank=True, choices=[('MAMA', 'MAMA'), ('PAPA', 'PAPA'), ('HERMANO', 'HERMANO'), ('HERMANA', 'HERMANA'), ('ESPOSA', 'ESPOSA'), ('ESPOSO', 'ESPOSO'), ('HIJO', 'HIJO'), ('HIJA', 'HIJA'), ('ABUELA', 'ABUELA'), ('ABUELO', 'ABUELO'), ('TIO', 'TIO'), ('TIA', 'TIA'), ('AMIGO', 'AMIGO'), ('VECINO', 'VECINO')], max_length=10, null=True)),
                ('telemergencia', models.CharField(blank=True, max_length=12, null=True)),
                ('estudios', models.CharField(blank=True, choices=[('PRIMER CICLO', 'PRIMER CICLO'), ('SEGUNDO CICLO', 'SEGUNDO CICLO'), ('TERCER CICLO', 'TERCER CICLO'), ('BACHILLERATO', 'BACHILLERATO'), ('TECNICO', 'TECNICO'), ('UNIVERSITARIO', 'UNIVERSITARIO')], max_length=20, null=True)),
                ('curriculum', models.FileField(blank=True, null=True, upload_to='curriculums')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('cargo', models.CharField(blank=True, max_length=50, null=True)),
                ('sexo', models.CharField(blank=True, max_length=10, null=True)),
                ('fecha_in', models.DateField(blank=True, null=True)),
                ('fecha_exp', models.DateField(blank=True, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='empleados')),
                ('salario', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('viaticos', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cafeteria', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('comision', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('wallet', models.BooleanField(blank=True, null=True)),
                ('createdate', models.DateTimeField(auto_now_add=True, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('sucursal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configuracion.sucursale')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
